var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');

var indexRouter = require('./routes/index');
var usersRouter = require('./routes/users');
const gameRouter = require('./routes/games');
const playerRouter = require('./routes/playerRouter');



var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));

app.use('/', indexRouter);
app.use('/users', usersRouter);
app.use('/games', gameRouter);
app.use('/players', playerRouter);



// catch 404 and forward to error handler
app.use(function(req, res, next) {
  next(createError(404));
});

// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;

/*
DROP TABLE games;
DROP TABLE players;
DROP TABLE pieces;

CREATE TABLE IF NOT EXISTS games(
    gameId integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    player1Id integer,
    player2Id integer        
);

CREATE TABLE IF NOT EXISTS players(
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name text NOT NULL CHECK (name <> ''),
    password text
);

CREATE TABLE IF NOT EXISTS pieces(
    pieceId integer,
    typeOfPiece text NOT NULL CHECK (typeOfPiece <> ''),
    playerId integer,
    currentPos integer,
    isDead integer,
    gameId integer
);

npm install express-generator -g
express --view=ejs chess

*/
